plugins {
    id 'java'
}

group 'br.com.dimed'
version '1.0-SNAPSHOT'

sourceCompatibility = 11
import groovy.json.JsonSlurper

repositories {
    maven { url "http://dl.bintray.com/epam/reportportal" }
    mavenCentral()
    maven { url "http://nexus.saas.hand-china.com/content/repositories/rdc/" }
    maven { url "https://repo.spring.io/libs-release/" }
}

dependencies {
    //Lombok
    compileOnly("org.projectlombok:lombok:1.18.12")
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    //Bean validator
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.1.5.Final'
    compile group: 'org.glassfish', name: 'javax.el', version: '3.0.1-b11'

    //ReportPortal
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'com.epam.reportportal', name: 'logger-java-logback', version: '5.0.3'
    compile group: 'com.epam.reportportal', name: 'commons-model', version: '5.3.0'
    compile files('libs/agent-java-cucumber6-all-5.0.0-BETA-2-SNAPSHOT.jar')   //fix nome scenario output
    implementation 'com.epam.reportportal:client-java:5.0.7'

    //Cucumber
    compile('org.junit.jupiter:junit-jupiter:5.6.2')
    compile group: 'io.cucumber', name: 'cucumber-java', version: '6.6.0'
    //compile group: 'io.cucumber', name: 'cucumber-core', version: '6.6.0'
    compile group: 'io.cucumber', name: 'cucumber-testng', version: '6.6.0'


    //Outros
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile 'org.mongodb.morphia:morphia:1.3.2'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.2.8.RELEASE'
    compile group: 'com.oracle', name: 'ojdbc7', version: '12.1.0.2'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
    compile("org.jsmart:kafka-testing:1.3.27") { exclude group: "org.junit.vintage", module: "junit-vintage-engine" }
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.6.0'
    compile("com.github.javafaker:javafaker:1.0.2")

    //jcronic
    implementation group: 'com.rubiconproject.oss', name: 'jchronic', version: '0.2.8'

}

task report {
    doFirst {


        //Atualiza reportportal.properties de acordo com parametros do gradle
        //Necessario, devido ao RP nao aceitar a mudanca dos valores em tempo de execucao
        def arquivoReport = new FileInputStream("src/test/resources/reportportal.properties")
        def props_report = new java.util.Properties()
        def arquivoEnv = new FileInputStream("src/main/resources/environment.properties")
        def propsEnv = new java.util.Properties()

        props_report.load(arquivoReport)
        propsEnv.load(arquivoEnv)

        props_report.setProperty("rp.launch", launcher)
        props_report.setProperty("rp.tags", ambiente)
        props_report.setProperty("rp.attributes", tag)
        //props_report.setProperty("rp.uuid", accessToken)


        propsEnv.setProperty("environment", ambiente)
        propsEnv.setProperty("local", local)

        arquivoReport.close()
        arquivoEnv.close()

        def outReport = new FileOutputStream("src/test/resources/reportportal.properties")
        props_report.store(outReport, null)
        outReport.close()

        def outEnv = new FileOutputStream("src/main/resources/environment.properties")
        propsEnv.store(outEnv, null)
        outEnv.close()
    }
}

tasks.withType(Test) {
    useTestNG() {
    }
    testLogging { events 'passed', 'skipped', 'failed' }
    systemProperties = System.getProperties() as Map<String, ?>
    scanForTestClasses = false
    testLogging.showStandardStreams = true
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'stepdef']
        }
    }
}


/*gradle report -Plauncher=${TAG} -Pambiente=${AMBIENTE} -Papim=${APIM} test -Dcucumber="-t @${TAG}" clean test*/
/*gradle report -Plauncher=customer-service -Pambiente=hlg -Papim=false test -Dcucumber="-t @customer-service" clean test*/
/*gradle test -Dcucumber="-t @mostruario-service" -Dcucumber="-t '@FA'" clean test*/

/*gradle report -Plauncher=${TAG} -Pambiente=${AMBIENTE} -Papim=${APIM} test -Dcucumber="-t @mostruario-service" -Dcucumber="-t '@FA'" clean test*/